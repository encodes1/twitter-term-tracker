var OAuth = require('oauth').OAuth,
    events = require('events')
    querystring = require('querystring'),
    requiredOptions = ['keys', 'action', 'params'];


exports.connect = function(options){
    return new OAuth(
        "https://api.twitter.com/oauth/request_token",
        "https://api.twitter.com/oauth/access_token",
        options.keys.consumer,
        options.keys.consumer_secret,
        "1.0A",
        options.callback,
        "HMAC-SHA1"
    );
};

exports.stream = function(options){
    requiredOptions.forEach(function(requiredOpt){
       if(options[requiredOpt] === undefined) throw requiredOpt + ' is a required option for twitter module';
    });

    var query = querystring.stringify(options.params);

    var emitter = new events.EventEmitter;

    var twitter_oauth = new OAuth(
        "https://api.twitter.com/oauth/request_token",
        "https://api.twitter.com/oauth/access_token",
        options.keys.consumer,
        options.keys.consumer_secret,
        "1.0A",
        null,
        "HMAC-SHA1"
    );

    var request = twitter_oauth.get(
        'https://stream.twitter.com/1.1/statuses/' + options.action + '.json?' + query,
//        'https://stream.twitter.com/1.1/statuses/sample.json',
        options.keys.access_token,
        options.keys.access_token_secret
    );

    var message = '';

    request.on('response', function (response) {
        response.setEncoding('utf8');

        // Check we got a good response
        if (response.statusCode !== 200) {
            var error = String(response.statusCode);
            emitter.emit('error', error);
            return;
        }

        // On response get individual tweets and emit them
        response.on('data', function (chunk) {
            message += chunk;
            var newline_index = message.indexOf('\r\n');
            if (newline_index !== -1) {
                var tweet_payload = message.slice(0, newline_index);
                var tweet = JSON.parse(tweet_payload);

                if (tweet.text) {
                    emitter.emit('tweet', tweet);
                } else {
                    // Not a tweet, maybe a delete
                    if(tweet.delete){
                        emitter.emit('delete', tweet);
                    }
                }
            }

            message = message.slice(newline_index + 1);
        });


        response.on('end', function () {
            emitter.emit('end');
        });
    });

    request.end();

    return emitter;
};